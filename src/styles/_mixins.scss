// ---------------------------------------------------
// SCSS Breakpoints (as individual variables)
// Define your responsive breakpoints here.
// You can customize these values as needed.
// ---------------------------------------------------
$breakpoint-xs: 480px; // Extra small devices (e.g., old phones)
$breakpoint-sm: 640px; // Small devices (e.g., smartphones)
$breakpoint-md: 768px; // Medium devices (e.g., tablets)
$breakpoint-lg: 1024px; // Large devices (e.g., small laptops, desktops)
$breakpoint-xl: 1280px; // Extra large devices (e.g., large desktops)
$breakpoint-2xl: 1440px; // Double extra large devices (e.g., large desktops, TVs)
$breakpoint-3xl: 1536px; // Triple extra large devices
$breakpoint-4xl: 1600px; // Extra extra large devices
// ---------------------------------------------------
// Mixin: respond-to
// Usage: @include respond-to(md) { ... your styles ... }
//
// This mixin generates a 'min-width' media query.
// Styles inside this mixin will apply from the specified
// breakpoint size and up.
// ---------------------------------------------------
@mixin respond-to($size) {
	@if $size == 'xs' {
		@media (min-width: $breakpoint-xs) {
			@content;
		}
	} @else if $size == 'sm' {
		@media (min-width: $breakpoint-sm) {
			@content;
		}
	} @else if $size == 'md' {
		@media (min-width: $breakpoint-md) {
			@content;
		}
	} @else if $size == 'lg' {
		@media (min-width: $breakpoint-lg) {
			@content;
		}
	} @else if $size == 'xl' {
		@media (min-width: $breakpoint-xl) {
			@content;
		}
	} @else if $size == '2xl' {
		@media (min-width: $breakpoint-2xl) {
			@content;
		}
	} @else if $size == '3xl' {
		@media (min-width: $breakpoint-3xl) {
			@content;
		}
	} @else if $size == '4xl' {
		@media (min-width: $breakpoint-4xl) {
			@content;
		}
	} @else {
		// Warn the developer if an invalid breakpoint name is used
		@warn "Invalid breakpoint '#{$size}'. Please use 'xs', 'sm', 'md', 'lg', 'xl', '2xl', '3xl', or '4xl'.";
	}
}

// ---------------------------------------------------
// Mixin: respond-down-to
// Usage: @include respond-down-to(md) { ... your styles ... }
//
// This mixin generates a 'max-width' media query.
// Styles inside this mixin will apply from the specified
// breakpoint size and down. Useful for mobile-first design
// where you want to override styles for smaller screens.
// ---------------------------------------------------
@mixin respond-down-to($size) {
	@if $size == 'xs' {
		@media (max-width: #{($breakpoint-xs - 1px)}) {
			@content;
		}
	} @else if $size == 'sm' {
		@media (max-width: #{($breakpoint-sm - 1px)}) {
			@content;
		}
	} @else if $size == 'md' {
		@media (max-width: #{($breakpoint-md - 1px)}) {
			@content;
		}
	} @else if $size == 'lg' {
		@media (max-width: #{($breakpoint-lg - 1px)}) {
			@content;
		}
	} @else if $size == 'xl' {
		@media (max-width: #{($breakpoint-xl - 1px)}) {
			@content;
		}
	} @else if $size == '2xl' {
		@media (max-width: #{($breakpoint-2xl - 1px)}) {
			@content;
		}
	} @else if $size == '3xl' {
		@media (max-width: #{($breakpoint-3xl - 1px)}) {
			@content;
		}
	} @else if $size == '4xl' {
		@media (max-width: #{($breakpoint-4xl - 1px)}) {
			@content;
		}
	} @else {
		// Warn the developer if an invalid breakpoint name is used
		@warn "Invalid breakpoint '#{$size}'. Please use 'xs', 'sm', 'md', 'lg', 'xl', '2xl', '3xl', or '4xl'.";
	}
}
